.8086
.MODEL SMALL
.STACK
.DATA
	MSG1 DB "ENTER THE STRING:- $"
	MSG2 DB "LENGTH OF THE STRING:- $"
	MSG3 DB "REVERSED STRING:- $"
	INPUT DB 100 DUP(0)
	OUTPUT DB 100 DUP(0)
	LINE DB 10, 13, "$"
	NUM DB "0123456789ABCDEF$"

.CODE
	MOV AX, @DATA
	MOV DS, AX
	MOV ES, AX
	LEA SI, INPUT
	LEA DI, OUTPUT
	LEA BX, NUM
	PUSH SI
	CALL STR_IN
	POP SI
	PUSH SI
	CALL LENGTH_STRING
	POP SI
	PUSH DX
	CALL PRINT
	POP DX
	PUSH SI
	PUSH DI
	PUSH DX
	CALL REVERSE
	POP DX
	POP DI
	POP SI
	MOV AH, 4CH
	INT 21H

STR_IN:
	PUSH BP
	MOV BP, SP
	MOV SI, [BP + 04]
	MOV CL, 13
	LEA DX, MSG1
	MOV AH, 09H
	INT 21H
CONTI:	MOV AH, 01H
	INT 21H
	CMP AL, CL
	JZ IN_COM
	MOV [SI], AL
	INC SI
	JMP CONTI
IN_COM: MOV BYTE PTR [SI], '$'
	POP BP
	RET

LENGTH_STRING :
	PUSH BP
	MOV BP, SP
	MOV SI, [BP + 04]
	MOV DX, 0000H
COUNT:	ADD DX, 0001H
	INC SI
	CMP BYTE PTR[SI - 01H], '$'
	JNZ COUNT
	SUB DX, 0001H
	POP BP
	RET

PRINT :
	PUSH BP
	MOV BP, SP
	LEA DX, MSG2
        MOV AH, 09H
        INT 21H	
	MOV DX, [BP + 04]
	MOV CX, 0004H
	MOV AX, DX
AGAIN:  PUSH CX
	MOV CL, 04H
	ROL AX, CL
	PUSH AX
	AND AX, 000FH
	XLAT
	MOV DL, AL
	MOV AH, 02H
	INT 21H
	POP AX
	POP CX
	LOOP AGAIN
	LEA DX, LINE
        MOV AH, 09H
        INT 21H
	POP BP
	RET
	
REVERSE :
	PUSH BP
	MOV BP, SP
	LEA DX, MSG3
        MOV AH, 09H
        INT 21H
	MOV DX, [BP +04]
	MOV DI, [BP +06]
	MOV SI, [BP +08]
	ADD SI, DX
	DEC SI
	MOV CX, DX
	STD
REPEAT:	MOVSB
	ADD DI, 02H
	LOOP REPEAT
	MOV BYTE PTR [DI], '$'
	LEA DX, OUTPUT
        MOV AH, 09H
        INT 21H
	POP BP
	RET

END
