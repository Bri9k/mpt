.8086
.MODEL SMALL
.STACK
.DATA
	MSG1 DB "ENTER THE STRING:- $"
	MSG2 DB "ENTERED STRING IS PALINDROME$"
	MSG3 DB "ENTERED STRING IS NOT PALINDROME$"
	INPUT DB 100 DUP(0)
	OUTPUT DB 100 DUP(0)

.CODE
	MOV AX, @DATA
	MOV DS, AX
	MOV ES, AX
	LEA SI, INPUT
	LEA DI, OUTPUT
	PUSH SI
	CALL STR_IN
	POP SI
	PUSH SI
	CALL LENGTH_STRING
	POP SI
	PUSH SI
	PUSH DI
	PUSH DX
	CALL REVERSE
	POP DX
	POP DI
	POP SI
	CLD
	MOV CX, DX
C_NEXT:	CMPSB
	JNZ N_PALIN
	LOOP C_NEXT
	LEA DX, MSG2
	MOV AH, 09H
	INT 21H
	JMP OVER
N_PALIN:LEA DX, MSG3
        MOV AH, 09H
        INT 21H
OVER:	MOV AH, 4CH
	INT 21H

STR_IN:
	PUSH BP
	MOV BP, SP
	MOV SI, [BP + 04]
	MOV CL, 13
	LEA DX, MSG1
	MOV AH, 09H
	INT 21H
CONTI:	MOV AH, 01H
	INT 21H
	CMP AL, CL
	JZ IN_COM
	MOV [SI], AL
	INC SI
	JMP CONTI
IN_COM: MOV BYTE PTR [SI], '$'
	POP BP
	RET

LENGTH_STRING :
	PUSH BP
	MOV BP, SP
	MOV SI, [BP + 04]
	MOV DX, 0000H
COUNT:	ADD DX, 0001H
	INC SI
	CMP BYTE PTR[SI - 01H], '$'
	JNZ COUNT
	SUB DX, 0001H
	POP BP
	RET

REVERSE :
	PUSH BP
	MOV BP, SP
	MOV DX, [BP +04]
	MOV DI, [BP +06]
	MOV SI, [BP +08]
	ADD SI, DX
	DEC SI
	MOV CX, DX
	STD
REPEAT:	MOVSB
	ADD DI, 02H
	LOOP REPEAT
	MOV BYTE PTR [DI], '$'
	POP BP
	RET

END
