.8086
.MODEL SMALL
.STACK
.DATA
	MSG1 DB  "ENTER THE STRING : $"
	MSG2 DB  "ENTER SUBSTRING : $"
	STRING1 DB 20 DUP(?)
	SUBSTRING DB 20 DUP(?)
	MSG3 DB "IS SUBSTRING$"
	MSG4 DB "NOT SUBSTRING$"
	N_LINE DB 10, 13, "$"
.CODE
	MOV AX, @DATA
	MOV DS, AX
	MOV ES, AX

	LEA DX, MSG1
	MOV AH, 09H
	INT 21H

	LEA DI, STRING1
	CALL INPUT

	LEA DX, MSG2
	MOV AH, 09H
	INT 21H

	LEA DI, SUBSTRING
	CALL INPUT

	MOV SI, OFFSET STRING1
	MOV DI, OFFSET SUBSTRING
AGAIN:  MOV AL, [SI]
	CMP AL, '$'
	JZ NOTFOUND
	PUSH DI
	PUSH SI
	CALL STARTSUB
	POP SI
	POP DI
	CMP AL, 01H
	JZ GOODEND
	INC SI
	JMP AGAIN

GOODEND:MOV DX, OFFSET MSG3
	MOV AH, 09H
	INT 21H
	JMP ZALA
NOTFOUND:MOV DX, OFFSET MSG4
	MOV AH, 09H
	INT 21H
	JMP ZALA
ZALA:	MOV DX, OFFSET N_LINE
	MOV AH, 09H
	INT 21H
	MOV AX, 4C00H
	INT 21H

INPUT:
        CLD
I1:     MOV AH, 01H
        INT 21H
        CMP AL, 0DH
        JZ I2
        STOSB
        JMP I1
I2:     MOV AL, "$"
        MOV [DI], AL
        RET

STARTSUB:
	PUSH BP
	MOV BP, SP
	MOV SI, [BP + 04]
	MOV DI, [BP + 06]
	PUSH SI
	CALL PRINTSTRING
	POP SI
NEXT:   MOV AL, [SI]
	MOV BL, [DI]
	CMP BL, '$'
	JZ FOUND
	CMP AL, BL
	JNZ STOP
	INC DI
	INC SI
	JMP NEXT
FOUND:	MOV AL, 01H
	JMP RETURN
STOP:	MOV AL, 00H
	JMP RETURN
RETURN: POP BP
	RET 

PRINTSTRING:
	PUSH BP
	MOV BP, SP
	MOV DX, [BP + 04H]
	AND DX, 00FFH
	MOV AH, 09H
	INT 21H
	MOV DX, OFFSET N_LINE
	MOV AH, 09H
	INT 21H
	POP BP
	RET

PRINTCHAR:
	PUSH BP
	MOV BP, SP
	MOV DX, [BP + 04H]
	MOV AH, 02H
	INT 21H
	MOV DX, OFFSET N_LINE
	MOV AH, 09H
	INT 21H
	POP BP
	RET

END

